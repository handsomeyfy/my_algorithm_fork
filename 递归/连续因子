一个正整数 N 的因子中可能存在若干连续的数字。例如 630 可以分解为 3×5×6×7，其中 5、6、7 就是 3 个连续的数字。给定任一正整数 N，要求编写程序求出最长连续因子的个数，并输出最小的连续因子序列。

输入格式：
输入在一行中给出一个正整数 N（1<N<2 
31
 ）。

输出格式：
首先在第 1 行输出最长连续因子的个数；然后在第 2 行中按 因子1*因子2*……*因子k 的格式输出最小的连续因子序列，其中因子按递增顺序输出，1 不算在内。

输入样例：
630

输出样例：
3
5*6*7


#include<stdio.h>
#include<math.h>
int main()
{
long long a,i,j,x,y=0,n=2,w,v;
 
    scanf("%lld",&a);
    
    while(n<=sqrt(a))
    {
        v=a;
        x=0;//储存个数
        for(j=n;j<a;j++)
    {
        if(v%j==0)
        {
        x+=1;
        v/=j;
        }
        else
        break;//不连续就跳出
    }
        if(y<x)//找最多个数
        {
            y=x;//y为最多个数
            w=n;
        }
        n+=1;//n+1重新循环
    }
    if(y==0)
    printf("1\n%lld\n",a);
    else
    {
    printf("%lld\n",y);
    for(i=0;i<y;i++)
    {
        printf("%lld",w);
        w+=1;
        if(i!=y-1)
            printf("*");
        else
            printf("\n");
    }
    }
}
