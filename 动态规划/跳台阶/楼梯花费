给定一个整数数组 cost  ，其中 cost[i]  是从楼梯第i 个台阶向上爬需要支付的费用，下标从0开始。一旦你支付此费用，即可选择向上爬一个或者两个台阶。
你可以选择从下标为 0 或下标为 1 的台阶开始爬楼梯。
请你计算并返回达到楼梯顶部的最低花费。
示例1
输入：
[2,5,20]
复制
返回值：
5
复制
说明：
你将从下标为1的台阶开始，支付5 ，向上爬两个台阶，到达楼梯顶部。总花费为5  
 
#include<stdio.h>
#define MIN(x,y) x<y?x:y
int minCostClimbingStairs(int* cost, int costLen) {
    // write code here

    int sum[100001] = { 0 };
    sum[0] = 0, sum[1] = 0;
    if (costLen == 1)
        return cost[0];
    for (int i = 2; i <= costLen; i++)
    {
        sum[i] = MIN(sum[i - 1] + cost[i - 1], sum[i - 2] + cost[i - 2]);


    }

    return sum[costLen];
}
int main()
{
    int cost[15] = { 55,89,84,47,76,71,75,63,18,9 };
    minCostClimbingStairs(cost, 10);
    return 0;
}