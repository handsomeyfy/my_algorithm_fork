贪心
贪心思想属于动态规划思想中的一种，其基本原理是找出整体当中给的每个局部子结构的最优解，并且最终将所有的这些局部最优解结合起来形成整体上的一个最优解。



假设你有一个数组prices，长度为n，其中prices[i]是股票在第i天的价格，请根据这个价格数组，返回买卖股票能获得的最大收益
1.你可以买入一次股票和卖出一次股票，并非每天都可以买入或卖出一次，总共只能买入和卖出一次，且买入必须在卖出的前面的某一天
2.如果不能获取到任何利润，请返回0
3.假设买入卖出均无手续费

step 1：首先排除数组为空的特殊情况。
step 2：将第一天看成价格最低，后续遍历的时候遇到价格更低则更新价格最低。
step 3：每次都比较最大收益与当日价格减去价格最低的值，选取最大值作为最大收益。


int maxProfit(int* prices, int pricesLen ) {
    // write code here
    int min=prices[0];
    int c=prices[0]-min;
    if(pricesLen==1)
    return 0;
    for(int i=1;i<pricesLen;i++)
    {
        
        if(prices[i-1]<min)
        min=prices[i-1];
        if(prices[i]-min>c)
         c=prices[i]-min;

    }
    if(c>0)
    return c;
    else
     return 0;
}
