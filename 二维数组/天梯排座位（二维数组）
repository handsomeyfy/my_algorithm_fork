天梯赛每年有大量参赛队员，要保证同一所学校的所有队员都不能相邻，分配座位就成为一件比较麻烦的事情。为此我们制定如下策略：假设某赛场有 N 所学校参赛，第 i 所学校有 M[i] 支队伍，每队 10 位参赛选手。令每校选手排成一列纵队，第 i+1 队的选手排在第 i 队选手之后。从第 1 所学校开始，各校的第 1 位队员顺次入座，然后是各校的第 2 位队员…… 以此类推。如果最后只剩下 1 所学校的队伍还没有分配座位，则需要安排他们的队员隔位就坐。本题就要求你编写程序，自动为各校生成队员的座位号，从 1 开始编号。
输入样例：
3
3 4 2
输出样例：
#1
1 4 7 10 13 16 19 22 25 28
31 34 37 40 43 46 49 52 55 58
61 63 65 67 69 71 73 75 77 79
#2
2 5 8 11 14 17 20 23 26 29
32 35 38 41 44 47 50 53 56 59
62 64 66 68 70 72 74 76 78 80
82 84 86 88 90 92 94 96 98 100
#3
3 6 9 12 15 18 21 24 27 30
33 36 39 42 45 48 51 54 57 60

#include<stdio.h>
int a[110][11000];
int fun(int a[],int m,int n)//判定是否只剩下一个队
{
int i,s=0;
for(i=0;i<n;i++)
   if(i!=m)
    s+=a[i];
    return !s;
}
int main()
{
    int n,i,b[110],max=-999,j,s=0,flag=0;
    scanf("%d",&n);
   for(i=0;i<n;i++)
   {
     scanf("%d",&b[i]);
     b[i]*=10;
       if(max<b[i])
           max=b[i];//记录学校所派出的最大人数
   }
    if(n==1)
        s=-1;//当只有一个队时，应该从1开始排
     for(j=0;j<max;j++)
     {
     for(i=0;i<n;i++)
     {
        if(b[i]!=0)
         {
             if(fun(b,i,n))
            {
               if((i==0&&a[i][j-1]==s)||flag!=0||n==1)
                   a[i][j]=s+=2;
                else if(!flag)
                    a[i][j]=++s;
                flag=1;
             }
             else a[i][j]=++s;
             b[i]--;
        }
     }
     }
   for(i=0;i<n;i++)
   {
      printf("#%d\n",i+1);
      for(j=0;a[i][j];j++)
     {
        printf("%d",a[i][j]);
        if((j+1)%10==0)printf("\n");//每个10个换行一次，否则输出空格。
        else printf(" ");
      }
   }
   return 0;
} 
//C++
#include<iostream>
using namespace std;
int main(){
	int map[105][105]={0},a[105][105]={0},n,m,max=0;
	cin>>n;
	for(int i=0;i<n;i++){
		cin>>m;
		if(m>max)max=m;
		for(int j=0;j<10*m;j++){
			map[i][j]=1;
		}
	}
	int num=1,flag=-1;  //用flag记录上一个人的行下标（即所在学校） 
	for(int i=0;i<10*max;i++){
		for(int j=0;j<n;j++){
			if(map[j][i]){  //这里要注意i和j的下标位置，i是列j是行，行依次变化，对应一个学校选一个人 
				if(flag!=j){
					a[j][i]=num++;
					flag=j;
				}
				else{
					num+=1;
					a[j][i]=num++;
					flag=j;
				}
			}
		}
	}
	for(int i=0;i<n;i++){
		printf("#%d\n",i+1);
		for(int j=0;j<10*max;j++){
			if(a[i][j])printf("%d%c",a[i][j],(j+1)%10==0?'\n':' ');
		}
	}
	return 0;
}